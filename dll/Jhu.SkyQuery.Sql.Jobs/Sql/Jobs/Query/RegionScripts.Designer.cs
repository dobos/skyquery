//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Jhu.SkyQuery.Sql.Jobs.Query {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class RegionScripts {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal RegionScripts() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Jhu.SkyQuery.Sql.Jobs.Query.RegionScripts", typeof(RegionScripts).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- *** RegionResources/CreateHtmTables.sql *** ---
        ///
        ///DECLARE [$regionudtname] dbo.Region = [$regionparname]
        ///
        ///-- Generate HTM ranges
        ///
        ///CREATE TABLE [$htm_inner]
        ///(
        ///	htmIDStart bigint NOT NULL,
        ///	htmIDEnd bigint NOT NULL
        ///);
        ///
        ///INSERT [$htm_inner] WITH(TABLOCKX)
        ///SELECT htmIDStart, htmIDEnd
        ///FROM htm.Cover([$regionudtname]) AS htm
        ///WHERE partial = 0;
        ///
        ///CREATE TABLE [$htm_partial]
        ///(
        ///	htmIDStart bigint NOT NULL,
        ///	htmIDEnd bigint NOT NULL
        ///);
        ///
        ///INSERT [$htm_partial] WITH(TABLOCKX)
        ///SELECT htmIDStart, h [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateHtmTables {
            get {
                return ResourceManager.GetString("CreateHtmTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- *** RegionResources/DropHtmTables.sql *** ---
        ///
        ///-- Clean up
        ///
        ///DROP TABLE [$htm_inner];
        ///DROP TABLE [$htm_partial];.
        /// </summary>
        internal static string DropHtmTables {
            get {
                return ResourceManager.GetString("DropHtmTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	SELECT [$columnlist]
        ///	FROM [$tablename]
        ///	[$where].
        /// </summary>
        internal static string SelectAugmentedTable {
            get {
                return ResourceManager.GetString("SelectAugmentedTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	SELECT [$columnlist]
        ///	FROM [$codedb].htm.Cover(@r) __htm
        ///	INNER LOOP JOIN [$tablename]
        ///		ON [$htmid] BETWEEN __htm.htmIDStart AND __htm.htmIDEnd AND __htm.partial = 0
        ///	[$where_inner]
        ///
        ///	UNION ALL
        ///
        ///	SELECT [$columnlist]
        ///	FROM [$codedb].htm.Cover(@r) __htm
        ///	INNER LOOP JOIN [$tablename]
        ///		ON [$htmid] BETWEEN __htm.htmIDStart AND __htm.htmIDEnd AND __htm.partial = 1
        ///	[$where_partial].
        /// </summary>
        internal static string SelectAugmentedTableHtm {
            get {
                return ResourceManager.GetString("SelectAugmentedTableHtm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- *** RegionResources/TableStatistics.sql *** ---
        ///
        ///DECLARE @r dbo.Region = @region
        ///
        ///-- Create temp table to store keys
        ///
        ///CREATE TABLE [$temptable]
        ///(
        ///	[rn] bigint PRIMARY KEY,
        ///	[key] [$keytype]
        ///);
        ///
        ///WITH __t AS
        ///(
        ///	[$query]
        ///)
        ///INSERT [$temptable] WITH(TABLOCKX)
        ///SELECT ROW_NUMBER() OVER (ORDER BY [$keycol]), [$keycol]
        ///FROM __t;
        ///
        ///DECLARE @count bigint = @@ROWCOUNT;
        ///DECLARE @step bigint = @count / @bincount;
        ///
        ///IF (@step = 0) SET @step = 1;
        ///
        ///SELECT [rn], [key]
        ///FROM [$temptable]
        ///WHERE [rn]  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TableStatistics {
            get {
                return ResourceManager.GetString("TableStatistics", resourceCulture);
            }
        }
    }
}
